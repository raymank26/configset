plugins {
    id "com.google.protobuf" version "$protobufPluginVersion"
    id 'maven-publish'
}

sourceSets {
    grpc {
        kotlin {
            srcDir 'src/grpc/kotlin'
        }
        java {
            srcDirs 'build/generated/source/proto/grpc/java'
            srcDir 'build/generated/source/proto/grpc/grpc'
        }
    }
}

java {
    registerFeature('grpc') {
        usingSourceSet(sourceSets.grpc)
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    grpcApi group: 'com.google.protobuf', name: 'protobuf-java', version: "$protobufVersion"
    grpcApi group: 'io.grpc', name: 'grpc-all', version: "$grpcVersion"
    grpcImplementation "javax.annotation:javax.annotation-api:$javaxAnnotationVersion"

    api "org.slf4j:slf4j-api:$slf4jVersion"
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjvm-default=all']
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobufVersion"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }
    }

    generateProtoTasks {
        ofSourceSet('grpc').configureEach {
            plugins {
                // Apply the "grpc" plugin whose spec is defined above, without
                // options.  Note the braces cannot be omitted, otherwise the
                // plugin will not be added. This is because of the implicit way
                // NamedDomainObjectContainer binds the methods.
                grpc {}
            }
        }
    }
}

sourceCompatibility = "$javaVersion"
targetCompatibility = "$javaVersion"

java {
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.configset'
            artifactId = 'configset-common-client'
            from components.java
        }
    }
}

