buildscript {
    ext.kotlin_version = '1.0.6'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.hidetake.ssh' version '2.8.0'
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'maven-publish'

mainClassName = "com.letsconfig.Main"

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile group: 'org.jdbi', name: 'jdbi', version: '2.78'
    compile group: 'postgresql', name: 'postgresql', version: '9.4.1208-jdbc42-atlassian-hosted'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.6'
    compile group: 'com.letsconfig.sdk', name: 'sdk', version: '0.0.2'
    compile "com.sparkjava:spark-core:2.5.5"
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile group: 'io.prometheus', name: 'simpleclient', version: '0.0.21'
    compile group: 'io.prometheus', name: 'simpleclient_servlet', version: '0.0.21'
    compile group: 'io.prometheus', name: 'simpleclient_hotspot', version: '0.0.21'

    testCompile 'junit:junit:4.12'
}

run {
    jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5004"]
}

distributions {
    main {
        contents {
            from ("conf/prod") {
                into {
                    'conf'
                }
            }
        }
    }
}

remotes {
    prod {
        host = '188.166.22.200'
        user = 'ermak'
        identity = file('/Users/anton.ermak/.ssh/id_rsa')
    }
}


task deployProd(dependsOn: build) {
    doLast {
        ssh.run {
            session(remotes.prod) {
                def name = project.name
                def appName = "$name-${version}"
                def zipName = "${appName}.zip"
                def remoteDir = "/home/ermak/apps/letsconfig-prod"
                def pidPath = "$remoteDir/${name}.pid"
                def javaOpts = "-Xdebug -Xrunjdwp:transport=dt_socket,address=5004,server=y,suspend=n -Dlogback.configurationFile=$remoteDir/$name/conf/logback.xml"

                put from: file("$buildDir/distributions/$zipName"), into: remoteDir

                def pidExists = execute "test -f $pidPath && echo 1", ignoreError: true
                if (pidExists == "1") {
                    execute "kill `cat $pidPath`"
                    println "Application killed"
                    execute "rm -r $remoteDir/$name"
                }

                execute "cd $remoteDir && unzip -o $zipName && mv $appName $name"
                println "Application deployed"

                def startCmd = "JAVA_OPTS=\"$javaOpts\" $remoteDir/$name/bin/$name > /dev/null & echo \$! > $pidPath"
                println "Command to start = $startCmd"
                execute startCmd
            }
        }
    }
}

version = 0.1
