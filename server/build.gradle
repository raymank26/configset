plugins {
    id 'com.bmuschko.docker-java-application' version '6.4.0'
    id 'java-test-fixtures'
    id 'org.unbroken-dome.test-sets' version '4.0.0'
}

apply plugin: 'application'

mainClassName = "com.configset.server.Main"

testSets {
    functionalTest
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjvm-default=all']
    }
}

dependencies {
    implementation project(':sdk')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation group: 'org.jdbi', name: 'jdbi3-core', version: "$jdbiVersion"
    implementation group: 'org.jdbi', name: 'jdbi3-sqlobject', version: "$jdbiVersion"
    implementation group: 'org.jdbi', name: 'jdbi3-postgres', version: "$jdbiVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"

    implementation group: 'org.postgresql', name: 'postgresql', version: "$postgreSqlVersion"

    implementation group: 'ch.qos.logback', name: 'logback-classic', version: "$logbackVersion"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "$jacksonVersion"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation group: 'io.grpc', name: 'grpc-all', version: "$grpcVersion"
    implementation "io.insert-koin:koin-core-jvm:$koinVersion"
    implementation "com.auth0:java-jwt:$authZeroVersion"

    testImplementation "org.awaitility:awaitility:$awaitilityVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
    testImplementation group: 'io.mockk', name: 'mockk', version: "$mockkVersion"
    testImplementation "org.testcontainers:testcontainers:$testcontainersVersion"
    testImplementation "org.testcontainers:postgresql:$testcontainersVersion"
    testImplementation "com.github.tomakehurst:wiremock-jre8:$wiremockVersion"
    testImplementation "org.amshove.kluent:kluent:$kluentVersion"
    testImplementation "org.amshove.kluent:kluent:$kluentVersion"

    testFixturesImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
    testFixturesImplementation "org.testcontainers:postgresql:$testcontainersPostgresVersion"
    testFixturesImplementation group: 'org.jdbi', name: 'jdbi3-core', version: "$jdbiVersion"
    testFixturesImplementation group: 'org.jdbi', name: 'jdbi3-sqlobject', version: "$jdbiVersion"
    testFixturesImplementation group: 'org.jdbi', name: 'jdbi3-postgres', version: "$jdbiVersion"
}

run {
    jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5004"]
}

tasks.withType(Test) {
    useJUnitPlatform()
}

version = "0.0.3"

sourceCompatibility = 11
targetCompatibility = 8

docker {
    javaApplication {
        baseImage = 'openjdk:12'
        ports = [8080, 5554]
        images = ["configset-backend:${version}", 'configset-backend:latest']
        jvmArgs = ["-Xdebug", "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:5554"]
    }
}

check.dependsOn functionalTest

